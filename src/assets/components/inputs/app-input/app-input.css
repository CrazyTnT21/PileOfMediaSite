:host {
  --brightness-change--: 20;
  --input-background-color--: var(--input-background-color, white);
  --input-background-color-disabled--: hsl(from var(--input-background-color--) h s calc(l - (clamp(-1, calc((l - 50) * 100), 1)) * var(--brightness-change--) / 2));

  --input-color--: var(--input-color, black);
  --input-color-disabled--: hsl(from var(--input-color--) h s calc(l - (clamp(-1, calc((l - 50) * 100), 1)) * var(--brightness-change--)));

  --input-border-color--: var(--input-border-color, #969696);

  --input-border-color-hover--: hsl(from var(--input-border-color--) h s calc(l - (clamp(-1, calc((l - 50) * 100), 1)) * var(--brightness-change--)));
  --input-border-color-disabled--: hsl(from var(--input-border-color--) h s calc(l - (clamp(-1, calc((l - 50) * 100), 1)) * var(--brightness-change--)));

  --input-label-color--: var(--input-label-color, #737373);
  --input-label-color-disabled--: hsl(from var(--input-label-color--) h s calc(l - (clamp(-1, calc((l - 50) * 100), 1)) * var(--brightness-change--) * -.5));

  --input-invalid-color--: var(--input-invalid-color, #dc0000);
  --input-invalid-color-hover--: hsl(from var(--input-invalid-color--) h s calc(l - (clamp(-1, calc((l - 50) * 100), 1)) * var(--brightness-change--)));

  --input-outline-color--: var(--input-outline-color, Highlight);
  --input-padding--: var(--input-padding, 6px);
}

* {
  font: 1rem "Roboto", serif;
}

:host {
  padding: 3px;
  display: inline-flex;
  margin-top: .3rem;
  margin-bottom: .3rem;
  flex: 1;
  box-sizing: border-box;
  max-width: 100%;
}

.input {
  background-color: var(--input-background-color--);
  display: inline-flex;
  border-radius: 6px;
  border-width: 1px;
  border-style: solid;
  border-color: var(--input-border-color--);
  flex: 1;
}

.input:focus-visible {
  outline: var(--input-outline-color--) 3px solid;
}

.input:hover,
.input:focus {
  background-color: var(--input-background-color--);
  color: var(--input-color--);
  border-color: var(--input-border-color-hover--);
  transition: border-color ease 50ms;
}

.input[data-invalid] {
  border-color: var(--input-invalid-color--);
}

.input[data-invalid]:hover,
.input[data-invalid]:focus {
  border-color: var(--input-invalid-color-hover--);
}

label {
  position: absolute;
  color: var(--input-label-color--);
  transition: transform ease 50ms;
  margin: var(--input-padding--);
  font-size: 1.10em;
  cursor: text;
}

.parent:has(input:focus) > label,
.parent:has(input:not(input:placeholder-shown)) > label,
.parent:has(input:not([placeholder=""])) > label {
  cursor: default;
  color: var(--input-color--);
  font-size: 1em;
  margin: 0 0 0 6px;
  transform: translateY(-60%);
  background: linear-gradient(180deg, transparent 0 0.44rem, var(--input-background-color--) 0.44rem 0.9rem, transparent 0.9rem 100%);

  transition: transform ease 50ms;
}

.parent:has(input:focus) > label {
  background: linear-gradient(180deg, transparent 0 0.44rem, var(--input-background-color--) 0.44rem 0.9rem, transparent 0.9rem 100%);
}

:host([required]) {
  label::after {
    content: " (" attr(data-text-required) ")";
    font-size: .78rem;
    vertical-align: top;
    color: var(--input-invalid-color--);
  }
}

input[disabled]::placeholder {
  color: transparent;
}

.container {
  display: inline-flex;
  flex: 1;
  box-sizing: border-box;
  max-width: 100%;
}

.control {
  background-color: var(--input-background-color--);
  color: var(--input-color--);
  display: inline-flex;
  padding: var(--input-padding--);
  min-height: 0;
  min-width: 0;
  flex-wrap: wrap;
  border-radius: 6px;
  font-size: 1.10em;
}

:host([disabled]) {
  .input {
    background-color: var(--input-background-color-disabled--);
    color: var(--input-color-disabled--);
    border-color: var(--input-border-color-disabled--);
  }

  label {
    color: var(--input-label-color-disabled--)
  }

  label:not([x]) {
    background: linear-gradient(180deg, transparent 0 6px, var(--input-background-color-disabled--) 6px 15px, transparent 15px 100%);
  }
}
